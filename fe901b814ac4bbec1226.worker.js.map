{"version":3,"sources":["webpack://lib/webpack/bootstrap","webpack://lib/./src/constants.js","webpack://lib/./src/solvers/dfs.worker.js","webpack://lib/./src/solvers/utils.js","webpack://lib/./src/store/actions.js"],"names":["START_POINT_COLOR","POINT_COLOR","BEST_PATH_COLOR","EVALUATING_PATH_COLOR","EVALUATING_SEGMENT_COLOR","getRandomFloat","min","max","Math","random","sleep","ns","Promise","resolve","setTimeout","getRandomPoints","count","top","bottom","left","right","Array","from","length","map","_","coordinates","haversine","pt1","pt2","lng1","lat1","lng2","lat2","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","pathCost","path","slice","point","idx","reduce","a","b","SET_VIEWPORT_STATE","RESET_EVALUATING_STATE","RESET_BEST_PATH_STATE","SET_ALGORITHM","SET_DELAY","SET_EVALUATING_DETAIL_LEVEL","SET_SHOW_BEST_PATH","START_SOLVING","STOP_SOLVING","SET_BEST_PATH","SET_EVALUATING_PATHS","START_DEFINING_POINTS","ADD_DEFINED_POINT","STOP_DEFINING_POINTS","SET_POINT_COUNT","SET_POINTS","SET_DEFAULT_MAP","getRandomPoint","setViewportState","viewport","type","resetEvaluatingStateAction","resetBestPathStateAction","setAlgorithmAction","algorithm","startSolvingAction","points","delay","evaluatingDetailLevel","stopSolvingAction","setAlgorithm","dispatch","resetSolverState","setDelay","setEvaluatingDetailLevel","level","setShowBestPath","show","startSolving","args","stopSolving","setEvaluatingPath","cost","paths","setEvaluatingPaths","setBestPath","setDefaultMapAction","setPointsAction","setPointCountAction","startDefiningPointsAction","startDefiningPoints","addDefinedPoint","stopDefiningPoints","setPointCount","randomizePoints","bounds","getState","pointCount","setDefaultMap"],"mappings":"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","file":"fe901b814ac4bbec1226.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/solvers/dfs.worker.js\");\n","\n// orangish\nexport const START_POINT_COLOR = [255, 87, 34]\n\n// blueish\nexport const POINT_COLOR = [41, 121, 255] \n\n\n// blackish\nexport const BEST_PATH_COLOR = [0, 0, 0, 240];\n\n// orangish\nexport const EVALUATING_PATH_COLOR = [255, 87, 34, 240]\n\n// greyish\nexport const EVALUATING_SEGMENT_COLOR = [180, 180, 180, 240]","/* eslint-disable no-restricted-globals */\nimport * as actions from '../store/actions';\nimport * as utils from './utils';\nimport { EVALUATING_PATH_COLOR,\n         EVALUATING_SEGMENT_COLOR } from '../constants';\n\n\nlet DELAY = 0;\nlet EVALUATING_DETAIL_LEVEL = 0;\n\nself.onmessage = function({ data: action }) {\n  switch (action.type) {\n    case actions.START_SOLVING:\n      DELAY = action.delay;\n      EVALUATING_DETAIL_LEVEL = action.evaluatingDetailLevel;\n      runner(action.points)\n      break;\n    \n    case actions.SET_DELAY:\n      DELAY = action.delay;\n      break;\n\n    case actions.SET_EVALUATING_DETAIL_LEVEL:\n      EVALUATING_DETAIL_LEVEL = action.level\n      break;\n\n    default:\n      throw new Error(`invalid action sent to solver ${action.type}`);\n  }\n}\n\nconst runner = async points => {\n  await dfs(points)\n  self.postMessage(actions.stopSolving())\n  self.terminate()\n}\n\nconst setDifference = (setA, setB) => {\n  const ret = new Set(setA);\n  setB.forEach(p => {\n    ret.delete(p)\n  })\n  return ret\n}\n\n\nconst sleep = async () => {\n  await utils.sleep(DELAY || 10)\n}\n\nconst showEvaluating = (level, path, cost) => {\n  if (EVALUATING_DETAIL_LEVEL >= level) {\n    self.postMessage(actions.setEvaluatingPath(path, cost))\n  }\n}\n\nconst dfs = async (points, path=[], visited=null, overallBest=null) => {\n  if (visited === null) {\n    // initial call\n    path = [points.shift()]\n    points = new Set(points);\n    visited = new Set();\n  }\n\n  if (EVALUATING_DETAIL_LEVEL > 1 && path.length > 2) {\n    self.postMessage(actions.setEvaluatingPaths([\n      { path: path.slice(0, path.length - 1), color: EVALUATING_SEGMENT_COLOR },\n      { path: path.slice(path.length - 2, path.length + 1), color: EVALUATING_PATH_COLOR }\n    ]))\n    await sleep();\n  }\n\n  const available = setDifference(points, visited);\n\n  if (available.size === 0) {\n    // evaluate a complete path\n    const backToStart = [...path, path[0]];\n    const cost = utils.pathCost(backToStart);\n\n    self.postMessage(actions.setEvaluatingPaths([\n      { path: backToStart, color: EVALUATING_SEGMENT_COLOR }\n    ], cost))\n\n    await sleep();\n\n    return [cost, backToStart] \n  }\n\n\n  let [bestCost, bestPath] = [null, null];\n\n  for (const p of available) {\n    visited.add(p)\n    path.push(p)\n\n    const [curCost, curPath] = await dfs(points, path, visited, overallBest);\n    \n    if (bestCost === null || curCost < bestCost) {\n      bestCost = curCost;\n      bestPath = curPath;\n\n      if (overallBest === null || bestCost < overallBest) {\n        // found a new best complete path\n        overallBest = bestCost\n        self.postMessage(actions.setBestPath(bestPath, bestCost))\n      }\n    }\n    visited.delete(p)\n    path.pop();\n  }\n\n  return [bestCost, bestPath]\n}\n","\n\nconst getRandomFloat = (min, max) => {\n  return Math.random() * (max - min) + min\n}\n\nexport const sleep = ns => {\n  return new Promise(resolve => {\n    setTimeout(resolve, ns)\n  })\n}\n\nexport const getRandomPoints = (\n  count=12,\n  top=90,\n  bottom=-90,\n  left=-180,\n  right=180\n) => {\n  return Array.from({ length: count }).map(_ => ({\n    coordinates: [\n      getRandomFloat(left, right),\n      getRandomFloat(top, bottom)\n    ]\n  }))\n}\n\nexport const haversine = (pt1, pt2) => {\n  const [lng1, lat1] = pt1;\n  const [lng2, lat2] = pt2;\n  if ((lat1 == lat2) && (lng1 == lng2)) {\n\t\treturn 0;\n  }\n  \n  var radlat1 = Math.PI * lat1/180;\n  var radlat2 = Math.PI * lat2/180;\n\n  var theta = lng1-lng2;\n  var radtheta = Math.PI * theta/180;\n\n  var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n  if (dist > 1) {\n    dist = 1;\n  }\n  dist = Math.acos(dist);\n  dist = dist * 180/Math.PI;\n  return dist * 60 * 1.1515 * 1.609344;\n}\n\n\nexport const pathCost = path => {\n  return path.slice(0, -1)\n             .map((point, idx) => haversine(point, path[idx+1]))\n             .reduce((a, b) => a+b, 0)\n}\n","export const SET_VIEWPORT_STATE = 'SET_VIEWPORT_STATE';\n\nexport const RESET_EVALUATING_STATE = 'RESET_EVALUATING_STATE';\nexport const RESET_BEST_PATH_STATE = 'RESET_BEST_PATH_STATE';\n\nexport const SET_ALGORITHM = 'SET_ALGORITHM';\nexport const SET_DELAY = 'SET_DELAY';\nexport const SET_EVALUATING_DETAIL_LEVEL = 'SET_EVALUATING_DETAIL_LEVEL';\nexport const SET_SHOW_BEST_PATH = 'SET_SHOW_BEST_PATH';\nexport const START_SOLVING = 'START_SOLVING';\nexport const STOP_SOLVING = 'STOP_SOLVING';\n\nexport const SET_BEST_PATH = 'SET_BEST_PATH';\nexport const SET_EVALUATING_PATHS = 'SET_EVALUATING_PATHS';\n\nexport const START_DEFINING_POINTS = 'START_DEFINING_POINTS';\nexport const ADD_DEFINED_POINT = 'ADD_DEFINED_POINT';\nexport const STOP_DEFINING_POINTS = 'STOP_DEFINING_POINTS';\nexport const SET_POINT_COUNT = 'SET_POINT_COUNT';\nexport const SET_POINTS = 'SET_POINTS';\nexport const SET_DEFAULT_MAP = 'SET_DEFAULT_MAP';\n\n\nconst getRandomPoint = (max, min) => (\n  Math.random() * (max - min) + min\n)\n\n//\n// MAP INTERACTION\n//\nexport const setViewportState = viewport => ({\n  type: SET_VIEWPORT_STATE,\n  viewport\n})\n\n\n//\n// SOLVER CONTROLS\n//\nconst resetEvaluatingStateAction = () => ({\n  type: RESET_EVALUATING_STATE\n})\n\nconst resetBestPathStateAction = () => ({\n  type: RESET_BEST_PATH_STATE\n})\n\nconst setAlgorithmAction = algorithm => ({\n  type: SET_ALGORITHM,\n  algorithm\n})\n\n\nexport const startSolvingAction = (points, delay, evaluatingDetailLevel) => ({\n  type: START_SOLVING,\n  points,\n  delay,\n  evaluatingDetailLevel\n})\n\nexport const stopSolvingAction = () => ({\n  type: STOP_SOLVING\n})\n\n\nexport const setAlgorithm = algorithm => dispatch => {\n  dispatch(resetSolverState())\n  dispatch(setAlgorithmAction(algorithm))  \n}\n\nexport const setDelay = delay => ({\n  type: SET_DELAY,\n  delay\n})\n\nexport const setEvaluatingDetailLevel = level => ({\n  type: SET_EVALUATING_DETAIL_LEVEL,\n  level\n})\n\nexport const setShowBestPath = show => ({\n  type: SET_SHOW_BEST_PATH,\n  show\n})\n\nexport const resetSolverState = () => dispatch => {\n  dispatch(resetEvaluatingStateAction())\n  dispatch(resetBestPathStateAction())\n}\n\nexport const startSolving = (...args) => dispatch => {\n  dispatch(resetSolverState())\n  dispatch(startSolvingAction(...args))\n}\n\nexport const stopSolving = () => dispatch => {\n  dispatch(resetEvaluatingStateAction())\n  dispatch(stopSolvingAction())\n}\n\n\n\n//\n// SOLVER ACTIONS\n//\nexport const setEvaluatingPath = (path, cost) => ({\n  type: SET_EVALUATING_PATHS,\n  paths: [{\n    path\n  }],\n  cost\n})\n\n\nexport const setEvaluatingPaths = (paths, cost) => ({\n  type: SET_EVALUATING_PATHS,\n  paths,\n  cost\n})\n\nexport const setBestPath = (path, cost) => ({\n  type: SET_BEST_PATH,\n  path,\n  cost\n})\n\n\n//\n// POINT CONTROLS\n//\n\nconst setDefaultMapAction = () => ({\n  type: SET_DEFAULT_MAP\n})\n\nconst setPointsAction = points => ({\n    type: SET_POINTS,\n    points\n})\n\nconst setPointCountAction = count => ({\n  type: SET_POINT_COUNT,\n  count\n})\n\nconst startDefiningPointsAction = () => ({\n  type: START_DEFINING_POINTS\n})\n\n\nexport const startDefiningPoints = () => dispatch => {\n  dispatch(resetSolverState())\n  dispatch(startDefiningPointsAction())\n}\n\nexport const addDefinedPoint = point => ({\n  type: ADD_DEFINED_POINT,\n  point\n})\n\nexport const stopDefiningPoints = () => ({\n  type: STOP_DEFINING_POINTS\n})\n\nexport const setPointCount = count => dispatch => {\n  dispatch(resetSolverState())\n  dispatch(setPointCountAction(count))\n}\n\nexport const randomizePoints = bounds => (dispatch, getState) => {\n  const { pointCount } = getState()\n  const { top, bottom, left, right } = bounds;\n  const points = Array.from({ length: pointCount }).map(\n    _ => [getRandomPoint(right, left), getRandomPoint(top, bottom) ]\n  )\n  dispatch(setPointsAction(points))\n}\n\nexport const setDefaultMap = (...args) => dispatch => {\n  dispatch(resetSolverState())\n  dispatch(setDefaultMapAction())\n}\n\n\n\n\n\n"],"sourceRoot":""}